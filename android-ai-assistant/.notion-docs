# Android AI Assistant Documentation

## Application Architecture

### Data Flow Between Components

The application uses a structured approach to manage assistant configurations and settings:

1. **Data.kt**: Contains the definitions of all assistants and their default prompts
2. **Settings.kt**: Creates runtime settings using the assistant definitions from Data.kt
3. **ChatCompletion.kt**: Builds API requests using the settings

```mermaid
graph TD
    A[Data.kt] -->|Defines| B[Assistant Definitions]
    C[Settings.kt] -->|Uses| B
    C -->|Creates| D[Runtime Settings]
    E[ChatCompletion.kt] -->|Uses| D
    E -->|Builds| F[API Request]
```

### How Prompts Are Selected

1. Assistant definitions in `Data.kt` include default prompts
2. `Settings.kt` creates a map of assistant names to their prompts
3. When a user selects an assistant, the app retrieves the corresponding prompt
4. This prompt is sent as the system message in the API request

The fallback prompt in `Settings.create()` is only used if no prompts are explicitly provided.

## Controlling AI Output Format and Length

### Key Parameters for AI Control

| Parameter | Description | Recommended Values |
|-----------|-------------|-------------------|
| Temperature | Controls randomness in responses | 0.1-0.3 for deterministic outputs, 0.7-1.0 for creative outputs |
| Max Tokens | Limits response length | 50-150 for concise responses, 300+ for detailed explanations |
| System Prompt | Defines AI behavior and output format | See best practices below |

### System Prompt Best Practices

For consistent, formatted outputs:

1. **Be explicit about format requirements**
   - Specify exact output format with examples
   - Use formatting markers like "RESPONSE FORMAT:"
   - Show before/after examples

2. **Control verbosity**
   - Set clear length constraints
   - Specify word/sentence count limits
   - Use directives like "Be concise" or "Respond in X words or less"

3. **Use constraints and guardrails**
   - Add "ONLY" and "DO NOT" instructions
   - Specify what to exclude
   - Use numbered lists for multi-step instructions

4. **Example-driven prompting**
   - Include 2-3 examples of ideal inputs and outputs
   - Format examples exactly as you want responses
   - Cover different types of expected queries

### Example: YouTube Search Query Generator

```
You are a YouTube search query generator. 
Your ONLY job is to convert user questions into effective YouTube search queries.

RESPONSE FORMAT:
1. Respond ONLY with the search query in the format: "search_query"
2. Do NOT include explanations, introductions, or additional text
3. Keep queries concise (under 10 words when possible)
4. Do NOT use markdown formatting

Examples:
User: "How do I make pasta carbonara?"
Assistant: "pasta carbonara recipe easy homemade"

User: "Tell me about quantum physics"
Assistant: "quantum physics explained simply"
```

### Implementation Details

The `Settings` class now includes:
- Temperature control (default: 0.2)
- Max token limit (default: 150)
- Improved prompt structure with explicit formatting instructions

These changes should result in more consistent, properly formatted responses from the AI assistant. 